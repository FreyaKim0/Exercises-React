{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/app.js","components/storepicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","className","React","Component","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","porpTypes","PropTypes","shape","string","number","func","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","tagline","StorePicker","myInput","goToStore","storeName","history","push","defaultValue","required","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.e8d28352.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"top\">\r\n          <h1>\r\n            Catch\r\n            <span className=\"ofThe\">\r\n              <span className=\"of\">of</span>\r\n              <span className=\"the\">the</span>\r\n            </span>\r\n            Day\r\n          </h1>\r\n          <h3 className=\"tagline\">\r\n            <span>Fresh Seafood Market</span>\r\n          </h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import { any } from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key: key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // Make sure fish is loaded first\r\n    if (!fish) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count} </span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    //<ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n\r\n        <div className=\"total\">\r\n          Total:<strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import { resetWarningCache } from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  createFish = (event) => {\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: this.priceRef.current.value,\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // Refresh form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef} type=\"text\">\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          ref={this.descRef}\r\n          type=\"text\"\r\n          placeholder=\"Desc\"\r\n        />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static porpTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // 1. Take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value, // update the value that end user hopes to type\r\n    };\r\n    // 3.send all those changes upstream to the root component (App component here)\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold out!</option>\r\n        </select>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory login</h2>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Login with Github\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCzeSrRYe_8mD_fr2C6N2hlLl51gm5ZSSo\",\r\n  authDomain: \"catch-of-the-day-ef5c8.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-ef5c8-default-rtdb.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\nexport default base;\r\n","import React, { Component } from \"react\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport Login from \"./Login\";\r\nimport firebase from \"firebase\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1.Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2.claim if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3.Set the state of the inventory component to reflect the current\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. they must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React, { Component } from \"react\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <div className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out! \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localstorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\",\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the sxisting state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update the state\r\n    fishes[key] = updatedFish;\r\n    // 3. set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of the state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update the state\r\n    fishes[key] = null;\r\n    // 3. update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n  addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n  removeFromOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. remove order\r\n    delete order[key];\r\n    // 3. call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { getFunName } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass StorePicker extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (event) => {\r\n    // 1. stop form from submiting\r\n    event.preventDefault();\r\n    // 2. get text from input\r\n    console.log(this.myInput.current.value);\r\n    const storeName = this.myInput.current.value;\r\n    // 3. change the page route\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          defaultValue={getFunName()}\r\n          required\r\n          placeholder=\"store name\"\r\n        />\r\n        <button type=\"submit\">Visite Store</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React, { Component } from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found..</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./storepicker\";\r\nimport NotFound from \"./NotFound\";\r\nimport App from \"./app\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/app\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}